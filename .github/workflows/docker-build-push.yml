name: 🚀 Build and Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v3

      - name: 🔑 Set Up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🔐 Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: 🐳 Build and Push Docker Image (Multi-Arch)
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/limogiai/ibs-care-app:latest
            ghcr.io/limogiai/ibs-care-app:${{ github.sha }}

      - name: 📦 Install Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: 🔑 Add SSH Key
        run: |
          echo "${{ secrets.IBS_CARE_KEY }}" > ibs-care-key.pem
          chmod 600 ibs-care-key.pem

      - name: 🚀 Deploy EC2 with Terraform
        id: deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GHCR_PAT: ${{ secrets.GHCR_PAT }}
          GITHUB_ACTOR: ${{ github.actor }}
        run: |
          cd ibs-care-app-deployment
          terraform init
          terraform apply -auto-approve
          
          # Extract the public IP from Terraform's output using sed.
          # This expects a line like: public_ip = "3.92.27.214"
          PUBLIC_IP=$(terraform output public_ip | sed -n 's/^public_ip = "\(.*\)"$/\1/p')
          echo "EC2 Public IP: ${PUBLIC_IP}"
          
          # Save the public IP as a step output for later use.
          echo "public_ip=${PUBLIC_IP}" >> $GITHUB_OUTPUT
          
          echo "Waiting for 3 minutes to allow the EC2 instance to initialize..."
          sleep 180
          
          echo "Starting SSH availability check..."
          # Confirm the SSH key is in the expected location.
          ls -la ../ibs-care-key.pem
          
          # Retry SSH connection up to 20 times.
          for i in {1..20}; do
            if ssh -o StrictHostKeyChecking=no -o ConnectTimeout=5 -i ../ibs-care-key.pem "ubuntu@${PUBLIC_IP}" "echo 'SSH connection successful'"; then
              echo "SSH connection established"
              break
            fi
            if [ $i -eq 20 ]; then
              echo "Failed to establish SSH connection after 20 attempts"
              exit 1
            fi
            echo "Attempt $i failed. Waiting 5 seconds before retry..."
            sleep 5
          done
          
          echo "Starting deployment on the EC2 instance..."
          ssh -o StrictHostKeyChecking=no -i ../ibs-care-key.pem "ubuntu@${PUBLIC_IP}" /bin/bash <<'EOF'
            # Update package list.
            sudo apt-get update
            
            # Log in to Docker.
            echo "Logging into Docker..."
            sudo docker login ghcr.io -u ${GITHUB_ACTOR} -p ${GHCR_PAT}
            
            # Pull the latest image.
            echo "Pulling latest image..."
            sudo docker pull ghcr.io/limogiai/ibs-care-app:latest
            
            # Stop and remove any existing container.
            echo "Cleaning up existing container..."
            sudo docker stop ibs-care-app || true
            sudo docker rm ibs-care-app || true
            
            # Run the new container.
            echo "Starting new container..."
            sudo docker run -d --name ibs-care-app -p 4434:80 ghcr.io/limogiai/ibs-care-app:latest
            
            # Verify that the container is running.
            echo "Verifying deployment..."
            sudo docker ps | grep ibs-care-app
            EOF

      - name: ✅ Verify Deployment
        run: |
          echo "Deployment completed. Application URL: http://${{ steps.deploy.outputs.public_ip }}:4434"

      - name: 🧹 Cleanup
        if: always()
        run: |
          rm -f ibs-care-key.pem
